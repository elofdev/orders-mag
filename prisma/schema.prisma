// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String @id @default(uuid())
  name     String
  email    String @unique
  password String
  imgUrl   String
  role     Role   @default(USER)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

model Client {
  id     String @id @default(uuid())
  name   String
  phone  String
  email  String @unique
  imgUrl String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Order     Order[]

  @@map("clients")
}

model Category {
  id   String  @id @default(uuid())
  name String
  tax  Decimal

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Order     Order[]

  @@map("categories")
}

enum Role {
  ADMIN
  USER
}

model Produtc {
  id          String @id @unique
  name        String
  description String
  unit        String
  imgUrl      String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Order     Order[]

  @@map("products")
}

model Order {
  id                   String  @id @default(uuid())
  productName          String
  amount               Int // Quantidade
  saleValue            Decimal // Valor de venda
  rate                 Decimal // Taxa
  valueWithTax         Decimal // Valor Com taxa
  valueWithoutTax      Decimal // Valor sem taxa
  totalValueWithTax    Decimal // Total Com Taxa
  totalValueWithoutTax Decimal // Total sem Taxa

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  clientId String
  client   Client @relation(fields: [clientId], references: [id])

  categoryId String
  category   Category @relation(fields: [categoryId], references: [id])

  productId String
  product   Produtc @relation(fields: [productId], references: [id])

  @@map("orders")
}
